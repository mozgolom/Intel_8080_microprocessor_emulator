package model.emulator;

/**
 * Интерфейс слушателя внутрипрограммных командных событий ввода-вывода.
 * Класс, заинтересованный в обработке внутрипрограммных командных событий ввода-вывода,
 * реализует этот интерфейс и объект этого класса передаётся в метод
 * setIOActionListener(IIntraProgramIOActionsListener ioSystem) класса-микропроцессора,
 * реализующего интерфейс {@link model.kernel.IMicroprocessor}.
 * @author Maxim Rozhkov
 */
public interface IIntraProgramIOActionsListener {

    /**
     * Метод вызывается, когда исполняемая микропроцессором команда OUT
     * инициирует запись значения в порт 0x02.
     * @param value записываемое значение.
     */
    void out_0x02(int value);

    /**
     * Метод вызывается, когда исполняемая микропроцессором команда IN
     * инициирует чтение значения из порта 0x08.
     * @return значение из порта 0x08.
     */
    int in_0x08();

    /**
     * Метод вызывается, когда исполняемая микропроцессором команда OUT
     * инициирует запись значения в порт 0x16.
     * @param value записываемое значение.
     */
    void out_0x16(int value);

    /**
     * Метод вызывается, когда исполняемая микропроцессором команда IN
     * инициирует чтение значения из порта 0x16.
     * @return значение из порта 0x16.
     */
    int in_0x16();

    /**
     * Метод вызывается, когда исполняемая микропроцессором команда OUT
     * инициирует запись значения в порт 0x16.
     * @param value записываемое значение.
     */
    void out_0x05(int value);

    /**
     * Метод вызывается, когда исполняемая микропроцессором команда IN
     * инициирует чтение значения из порта 0x05.
     * @return значение из порта 0x05.
     */
    int in_0x05();

    /**
     * Метод вызывается, когда исполняемая микропроцессором команда OUT
     * инициирует запись значения в порт 0x07.
     * @param value записываемое значение.
     */
    void out_0x07(int value);

    /**
     * Метод вызывается, когда исполняемая микропроцессором команда IN
     * инициирует чтение значения из порта 0x07.
     * @return значение из порта 0x07.
     */
    int in_0x07();
}